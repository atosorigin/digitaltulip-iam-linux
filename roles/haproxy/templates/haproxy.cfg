global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        #stats socket /run/haproxy/admin.sock mode 660 level admin
        #stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
        #ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
       

listen incoming
        # primary cert is /etc/cert/server.pem
        # /etc/cert/certdir/ contains additional certificates for SNI clients
        bind :443 name https ssl crt /etc/pki/tls/haproxy.pem
        bind :80 name http

        acl host_portal hdr(host) -i portal.{{env}}.digitaltulip.net

        acl url_openam path_beg /openam
        acl url_openig path_beg /openig
        acl host_openam hdr_beg(host) -i openam
        acl url_openidm path_beg /openidm
        acl url_openidmui path_beg /openidmui
        acl url_openidm_admin path_beg /admin

        acl host_openam hdr_beg(host) -i openam
        # Uncomment this if you want to redirect all non SSL to SSL
        redirect scheme https code 301 if !{ ssl_fc }
        use_backend openam if url_openam
        use_backend openidm if url_openidm_admin or url_openidm or url_openidmui
        use_backend openig if url_openig
        use_backend portal if host_portal


backend portal
        # a http backend
        server s1 {{hostvars[
groups['tag_class_' ~ env ~ '-portalserver'][0]]['ec2_private_ip_address']}}:8080 check port 8080

backend openam
        # a http backend
        server s1 {{hostvars[
groups['tag_class_' ~ env ~ '-iamserver'][0]]['ec2_private_ip_address']}}:8080 check port 8080
        
backend openig
        server s1 {{hostvars[
groups['tag_class_' ~ env ~ '-iamserver'][0]]['ec2_private_ip_address']}}:2080 check port 2080
        reqrep ^([^\ ]*)\ /openig/(.*) \1\ /\2

backend openidm
        server s3 {{hostvars[
groups['tag_class_' ~ env ~ '-iamserver'][0]]['ec2_private_ip_address']}}:9080 check port 9080
        
backend apps
        server s4 {{hostvars[
groups['tag_class_' ~ env ~ '-iamserver'][0]]['ec2_private_ip_address']}}:18080 check port 18080